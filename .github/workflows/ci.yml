name: CI and release pipeline

on:
  pull_request:
  push:
    branches: ["main", "develop"]
    tags: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
            
      - name: Build
        run: cargo build --tests

  format:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
            
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
            
  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
            
      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup

      - name: Run tests
        run: cargo test

  release:
    runs-on: ubuntu-20.04
    needs: [format, lint, test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        
      - name: Install cargo-edit
        run: cargo install cargo-edit
            
      - name: Get version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/*/v}" >> $GITHUB_OUTPUT
      
      - name: Set version in Cargo.toml
        run: cargo set-version ${{ steps.version.outputs.version }}
            
      - name: Check version has been up-to-date
        run: test -z "$(git status -s)"
        
      - name: Build release
        run: cargo build --release

      - name: Extract changelog
        id: changelog
        run: sed -E -n '/^## \[${{ steps.version.outputs.version }}\]/,/^## \[[0-9\.]+\]/{/^\[[0-9\.]+\]/!p;}' CHANGELOG.md | sed '1d;$d' > /tmp/release-body.md

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          body_path: /tmp/release-body.md
          tag_name: v${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to registry
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}